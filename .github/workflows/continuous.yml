name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CTEST_OUTPUT_ON_FAILURE: ON
  CTEST_PARALLEL_LEVEL: 2

jobs:
  ####################
  # Linux / macOS
  ####################

  Unix:
    name: ${{ matrix.name }} (${{ matrix.config }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-12]
        config: [Release]
        include:
          - os: macos-12
            name: macOS
          - os: ubuntu-22.04
            name: Linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 10

      - name: Dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
            sudo apt-get update
            sudo apt-get install ccache

      - name: Dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install ccache

      - name: Cache Build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ matrix.config }}-cache

      - name: Prepare ccache
        run: |
          ccache --max-size=1.0G
          ccache -V && ccache --show-stats && ccache --zero-stats

      - name: Configure
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} \
            -DUSE_SANITIZER=Thread

      - name: Build
        run: cd build; make -j2; ccache --show-stats

      - name: Tests (TBB Threads)
        run: cd build; ././tests/foo_tests "parallel_cow_tbb"

      - name: Tests (STD Threads)
        run: cd build; ././tests/foo_tests "parallel_cow_std"
